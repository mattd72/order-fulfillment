logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=order-fulfillment
camel.springboot.main-run-controller=true
camel.springboot.xmlRoutes = true

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

# disable spring-cloud management endpoints 
endpoints.pause.enabled = false
endpoints.resume.enabled = false
endpoints.restart.enabled = false
endpoints.refresh.enabled = false
endpoints.env.enabled=false
endpoints.env.post.enabled=false

# AMQ broker properties
activemq.broker.url=failover://ssl://broker-amq-tcp-ssl-order-fulfillment.apps.lowes-7031.openshiftworkshop.com:443
activemq.broker.username=admin
activemq.broker.password=admin
activemq.broker.keystore=broker.ks
activemq.broker.keystorePassword=topsecret
activemq.broker.truststore=broker.ts
activemq.broker.truststorePassword=topsecret

# Custom properties
hardware.items=Hammer,Paint Brush,Nails,Wrench
electrical.items=Light Bulb

#postgresql specific
postgresql.service.name=postgresql
#postgresql.service.name=127.0.0.1
postgresql.service.database=sampledb
postgresql.service.username=dbuser
postgresql.service.password=password
postgresql.service.port=5432

#Database configuration
spring.datasource.url = jdbc:postgresql://${postgresql.service.name}:${postgresql.service.port}/${postgresql.service.database}
spring.datasource.username = ${postgresql.service.username}
spring.datasource.password = ${postgresql.service.password}